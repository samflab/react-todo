{"version":3,"sources":["firebase.js","Todo.js","App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","firestore","Todo","id","complete","text","todosRef","collection","currentUser","uid","className","tabIndex","onClick","doc","set","merge","onCompleteTodo","delete","onDeleteTodo","Todos","useState","todo","setTodo","useCollectionData","idField","todos","style","color","signOut","onSubmit","event","preventDefault","add","createdAt","FieldValue","serverTimestamp","required","value","onChange","e","target","placeholder","map","signInWithGoogle","signInWithPopup","GoogleAuthProvider","SignIn","App","useAuthState","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uOAaEA,IAASC,cATU,CACjBC,OAAQ,0CACRC,WAAY,iCACZC,UAAW,iBACXC,cAAe,6BACfC,kBAAmB,eACnBC,MAAO,8CAKF,IAAMC,EAAOR,IAASQ,OAChBC,EAAYT,IAASS,Y,GAEnBT,EAAf,E,8CCsCIU,EAAO,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,GAAIC,EAAqB,EAArBA,SAAUC,EAAW,EAAXA,KACtBC,EAAWL,EAAUM,WAAV,gBAA8BP,EAAKQ,YAAYC,IAA/C,WAKjB,OACE,sBAAcC,UAAU,YAAxB,UACE,wBACEA,UAAS,oBAAeN,EAAW,QAAU,IAC7CO,SAAS,IACTC,QAAS,kBATQ,SAACT,EAAIC,GAAL,OACrBE,EAASO,IAAIV,GAAIW,IAAI,CAAEV,UAAWA,GAAY,CAAEW,OAAO,IAQpCC,CAAeb,EAAIC,IAHpC,SAKGA,EAAW,cAAC,IAAD,IAA2B,cAAC,IAAD,MAGzC,qBAAKM,UAAS,yBAAoBN,EAAW,WAAa,IAA1D,SACGC,IAEH,qBAAKK,UAAU,eAAf,SACE,wBAAQE,QAAS,kBAhBF,SAACT,GAAD,OAAQG,EAASO,IAAIV,GAAIc,SAgBjBC,CAAaf,IAApC,SACE,cAAC,IAAD,UAdIA,IAuBCgB,EA7ED,WACZ,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACMhB,EAAWL,EAAUM,WAAV,gBAA8BP,EAAKQ,YAAYC,IAA/C,WACjB,EAAgBc,YAAkBjB,EAAU,CAAEkB,QAAS,OAAhDC,EAAP,oBAcA,OACE,sBAAKf,UAAU,OAAf,UACE,mCACE,sCACA,wBAAQgB,MAAO,CAAEC,MAAO,SAAWf,QAjBzB,kBAAMZ,EAAK4B,WAiBrB,yBAIF,uBAAMlB,UAAU,OAAhB,UACE,sBAAMmB,SApBS,SAACC,GACpBA,EAAMC,iBAENT,EAAQ,IACRhB,EAAS0B,IAAI,CACX3B,KAAMgB,EACNjB,UAAU,EACV6B,UAAWzC,IAASS,UAAUiC,WAAWC,qBAavC,SAGE,uBACEC,UAAQ,EACRC,MAAOhB,EACPiB,SAAU,SAACC,GAAD,OAAOjB,EAAQiB,EAAEC,OAAOH,QAClCI,YAAY,0BAKhB,qBAAK/B,UAAU,YAAf,SACGe,GAASA,EAAMiB,KAAI,SAACrB,GAAD,OAAU,cAAC,EAAD,eAAwBA,GAAbA,EAAKlB,gBC1ClDwC,EAAmB,kBACvB3C,EAAK4C,gBAAgB,IAAIpD,IAASQ,KAAK6C,qBACnCC,EAAS,kBACb,uBAAMpC,UAAW,OAAjB,UACE,sCACA,mBAAGA,UAAU,OAAb,SACE,wBAAQA,UAAU,eAAeE,QAAS+B,EAA1C,wCAcSI,EATH,WACV,MAAeC,YAAahD,GAC5B,OADA,oBAGW,cAAC,EAAD,IAAY,cAAC,EAAD,KCTViD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.1a750524.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/auth\";\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyCLVTWTOXJZefwp8hW8mvd-K0f_ZUc-7tg\",\r\n    authDomain: \"fir-todo-6e794.firebaseapp.com\",\r\n    projectId: \"fir-todo-6e794\",\r\n    storageBucket: \"fir-todo-6e794.appspot.com\",\r\n    messagingSenderId: \"211881193381\",\r\n    appId: \"1:211881193381:web:21f61e375d03dee38dc24c\"\r\n  };\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n\r\n  export const auth = firebase.auth();\r\n  export const firestore = firebase.firestore();\r\n\r\n  export default firebase;","import React from \"react\";\r\nimport \"./App.css\";\r\nimport { useState } from \"react\";\r\nimport { auth, firestore } from \"./firebase\";\r\nimport firebase from \"firebase\";\r\nimport { useCollectionData } from \"react-firebase-hooks/firestore\";\r\nimport { BsCircle } from \"react-icons/bs\";\r\nimport { AiOutlineCheckCircle, AiOutlineCloseCircle } from \"react-icons/ai\";\r\n\r\nconst Todos = () => {\r\n  const [todo, setTodo] = useState(\"\");\r\n  const todosRef = firestore.collection(`users/${auth.currentUser.uid}/todos`);\r\n  const [todos] = useCollectionData(todosRef, { idField: \"id\" });\r\n  const signOut = () => auth.signOut();\r\n\r\n  const onSubmitTodo = (event) => {\r\n    event.preventDefault();\r\n\r\n    setTodo(\"\");\r\n    todosRef.add({\r\n      text: todo,\r\n      complete: false,\r\n      createdAt: firebase.firestore.FieldValue.serverTimestamp(),\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"body\">\r\n      <header>\r\n        <h2>TODO</h2>\r\n        <button style={{ color: \"white\" }} onClick={signOut}>\r\n          Sign Out\r\n        </button>\r\n      </header>\r\n      <main className=\"main\">\r\n        <form onSubmit={onSubmitTodo}>\r\n          {/* <div className=\"input-container\">\r\n          <i className=\"far fa-circle icon\"></i> */}\r\n          <input\r\n            required\r\n            value={todo}\r\n            onChange={(e) => setTodo(e.target.value)}\r\n            placeholder=\"Create a new todo..\"\r\n          />\r\n          {/* </div> */}\r\n          {/* <button type=\"submit\">Add</button> */}\r\n        </form>\r\n        <div className=\"todo-list\">\r\n          {todos && todos.map((todo) => <Todo key={todo.id} {...todo} />)}\r\n        </div>\r\n        \r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Todo = ({ id, complete, text }) => {\r\n  const todosRef = firestore.collection(`users/${auth.currentUser.uid}/todos`);\r\n  const onCompleteTodo = (id, complete) =>\r\n    todosRef.doc(id).set({ complete: !complete }, { merge: true });\r\n  const onDeleteTodo = (id) => todosRef.doc(id).delete();\r\n\r\n  return (\r\n    <div key={id} className=\"one-entry\">\r\n      <button\r\n        className={`todo-item ${complete ? \"check\" : \"\"}`}\r\n        tabIndex=\"0\"\r\n        onClick={() => onCompleteTodo(id, complete)}\r\n      >\r\n        {complete ? <AiOutlineCheckCircle /> : <BsCircle />}\r\n      </button>\r\n\r\n      <div className={`todo-item-list ${complete ? \"complete\" : \"\"}`}>\r\n        {text}\r\n      </div>\r\n      <div className=\"cross-button\">\r\n        <button onClick={() => onDeleteTodo(id)}>\r\n          <AiOutlineCloseCircle />\r\n        </button>\r\n      </div>\r\n     \r\n    </div>\r\n    \r\n  );\r\n};\r\n\r\nexport default Todos;\r\n","import \"./App.css\";\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport { auth } from \"./firebase\";\nimport Todos from \"./Todo\";\nimport firebase from \"firebase\";\n\nconst signInWithGoogle = () =>\n  auth.signInWithPopup(new firebase.auth.GoogleAuthProvider());\nconst SignIn = () => (\n  <main className =\"todo\">\n    <h2>TODO</h2>\n    <p className=\"main\">\n      <button className=\"signInButton\" onClick={signInWithGoogle}> Sign in with Google</button>\n    </p>\n  </main>\n);\n\nconst App = () => {\n  const [user] = useAuthState(auth);\n  return (\n    \n      user ? <Todos /> : <SignIn />\n    \n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}